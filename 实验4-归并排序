#include<stdio.h>
#include<stdlib.h>
#include <memory.h>
void merge(int arr[], int L, int M, int R)
{
	int left_size = M - L;
	int right_size = R-M+1;
	int *left, *right;
	left = (int*)malloc(left_size * sizeof(int));
	right = (int*)malloc(right_size * sizeof(int));
	//分成两段
	for (int i = L;i < M;i++)
		left[i - L] = arr[i];
	for (int i = M;i <= R;i++)
		right[i - M] = arr[i];
	//两数组归并
	int j = 0, k = L,i = 0;
	while (i < left_size&&j < right_size)
		if (left[i] < right[j])
			arr[k++] = left[i++];
		else
			arr[k++] = right[j++];
	//剩下的补到后面
	while (i < left_size)
		arr[k++] = left[i++];
	while (j < right_size)
		arr[k++] = right[j++];
	free(left);
	free(right);
}

void mergesort(int arr[], int L, int R)
{
	if (L == R)
		return;
	else
		{
			int M = (L + R) / 2;
			mergesort(arr, L, M);
			mergesort(arr, M + 1, R);
			merge(arr, L,M+1, R);
		}
}



int main()
{
	int arr[] = {11,8,16,9,35,6,1,55 };
	int L = 0;
	int R = 7;

	mergesort(arr, L, R);

	for (int i = 0;i <=R;i++)
	{
		printf("%d ", arr[i]);
	}
}

